#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

#xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier
TERMINAL="alacritty"

hc keybind $Mod-Shift-q spawn nix-shell -p i3lock-fancy --run i3lock-fancy
hc keybind $Mod-Shift-r reload
hc keybind $Mod-k close_and_remove
hc keybind $Mod-Return spawn  ~/.config/herbstluftwm/ror.sh alacritty alacritty
hc keybind $Mod-Control-Return spawn alacritty
hc keybind $Mod-e spawn ~/.config/herbstluftwm/ror.sh emacs emacs
hc keybind $Mod-Control-e spawn emacsclient -c
hc keybind $Mod-x spawn dmenu_run
hc keybind $Mod-h spawn alacritty --title htop --command htop

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-n     focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-r     focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-g     focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-t     focus right


# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  or / shift left / chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Alt-n       or / shift left / chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-Down  or / shift down / chain , lock , shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Alt-r       or / shift down / chain , lock, shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Shift-Up    or / shift up / chain , lock, shift_to_monitor -u , focus_monitor -u , unlock
hc keybind $Mod-Alt-g       or / shift up / chain , lock, shift_to_monitor -u , focus_monitor -u , unlock
hc keybind $Mod-Shift-Right or / shift right / chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
hc keybind $Mod-Alt-t       or / shift right / chain , lock , shift_to_monitor -r , focus_monitor -r , unlock

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-n       resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-r       resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-g       resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep
hc keybind $Mod-Control-t       resize right +$resizestep


# layouting
hc keybind $Mod-d remove
hc keybind $Mod-f fullscreen toggle
#hc keybind $Mod-s floating toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set always_show_frame on
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 0
hc set frame_padding 0
hc set window_gap 4
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 8
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

# tags
tag_names=( "1" "2" "3" "4" "5" )
tag_keys=( {1..5} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible


# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

# find the panel
#panel=~/.config/herbstluftwm/panel.sh
#[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
killall polybar
for monitor in $(polybar --list-monitors | cut -d: -f1); do
    MONITOR="$monitor" polybar mainbar&
done
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    hc pad "$monitor" 30
done

## Load frame config based on monitor detection
screen_res=$(xrandr|grep -iw connected | cut -d' ' -f4)
if [[ $screen_res == 3840x1600* ]]; then
    frame_cfg="$(cat ~/.config/herbstluftwm/big-screen.frames)"
    hc load "$frame_cfg"
fi
